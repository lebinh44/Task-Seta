{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as postsAPI from \"./postsAPI\";\nexport const fetchPosts = createAsyncThunk(\"posts/fetchAll\", postsAPI.getPosts);\nexport const addPost = createAsyncThunk(\"posts/add\", postsAPI.createPost);\nexport const editPost = createAsyncThunk(\"posts/edit\", async ({\n  id,\n  data\n}) => await postsAPI.updatePost(id, data));\nexport const removePost = createAsyncThunk(\"posts/remove\", postsAPI.deletePost);\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    items: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPosts.pending, state => {\n      state.loading = true;\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.items = action.payload.data; // axios trả về {data: ...}\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    }).addCase(addPost.fulfilled, (state, action) => {\n      state.items.push(action.payload.data);\n    }).addCase(editPost.fulfilled, (state, action) => {\n      const idx = state.items.findIndex(p => p._id === action.payload.data._id);\n      if (idx !== -1) state.items[idx] = action.payload.data;\n    }).addCase(removePost.fulfilled, (state, action) => {\n      state.items = state.items.filter(p => p._id !== action.meta.arg);\n    });\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","postsAPI","fetchPosts","getPosts","addPost","createPost","editPost","id","data","updatePost","removePost","deletePost","postsSlice","name","initialState","items","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","push","idx","findIndex","p","_id","filter","meta","arg","reducer"],"sources":["/Users/lebinh/Task3/client/src/features/posts/postsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as postsAPI from \"./postsAPI\";\n\nexport const fetchPosts = createAsyncThunk(\"posts/fetchAll\", postsAPI.getPosts);\nexport const addPost = createAsyncThunk(\"posts/add\", postsAPI.createPost);\nexport const editPost = createAsyncThunk(\n  \"posts/edit\",\n  async ({ id, data }) => await postsAPI.updatePost(id, data)\n);\nexport const removePost = createAsyncThunk(\"posts/remove\", postsAPI.deletePost);\n\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    items: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchPosts.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchPosts.fulfilled, (state, action) => {\n        state.loading = false;\n        state.items = action.payload.data; // axios trả về {data: ...}\n      })\n      .addCase(fetchPosts.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n      .addCase(addPost.fulfilled, (state, action) => {\n        state.items.push(action.payload.data);\n      })\n      .addCase(editPost.fulfilled, (state, action) => {\n        const idx = state.items.findIndex(\n          (p) => p._id === action.payload.data._id\n        );\n        if (idx !== -1) state.items[idx] = action.payload.data;\n      })\n      .addCase(removePost.fulfilled, (state, action) => {\n        state.items = state.items.filter((p) => p._id !== action.meta.arg);\n      });\n  },\n});\n\nexport default postsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAO,KAAKC,QAAQ,MAAM,YAAY;AAEtC,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,gBAAgB,EAAEC,QAAQ,CAACE,QAAQ,CAAC;AAC/E,OAAO,MAAMC,OAAO,GAAGJ,gBAAgB,CAAC,WAAW,EAAEC,QAAQ,CAACI,UAAU,CAAC;AACzE,OAAO,MAAMC,QAAQ,GAAGN,gBAAgB,CACtC,YAAY,EACZ,OAAO;EAAEO,EAAE;EAAEC;AAAK,CAAC,KAAK,MAAMP,QAAQ,CAACQ,UAAU,CAACF,EAAE,EAAEC,IAAI,CAC5D,CAAC;AACD,OAAO,MAAME,UAAU,GAAGV,gBAAgB,CAAC,cAAc,EAAEC,QAAQ,CAACU,UAAU,CAAC;AAE/E,MAAMC,UAAU,GAAGb,WAAW,CAAC;EAC7Bc,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACnB,UAAU,CAACoB,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDK,OAAO,CAACnB,UAAU,CAACsB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO,CAAClB,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CACDa,OAAO,CAACnB,UAAU,CAACyB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACpC,CAAC,CAAC,CACDP,OAAO,CAACjB,OAAO,CAACoB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACR,KAAK,CAACc,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAClB,IAAI,CAAC;IACvC,CAAC,CAAC,CACDa,OAAO,CAACf,QAAQ,CAACkB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9C,MAAMK,GAAG,GAAGP,KAAK,CAACR,KAAK,CAACgB,SAAS,CAC9BC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKR,MAAM,CAACC,OAAO,CAAClB,IAAI,CAACyB,GACvC,CAAC;MACD,IAAIH,GAAG,KAAK,CAAC,CAAC,EAAEP,KAAK,CAACR,KAAK,CAACe,GAAG,CAAC,GAAGL,MAAM,CAACC,OAAO,CAAClB,IAAI;IACxD,CAAC,CAAC,CACDa,OAAO,CAACX,UAAU,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACmB,MAAM,CAAEF,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKR,MAAM,CAACU,IAAI,CAACC,GAAG,CAAC;IACpE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAexB,UAAU,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}