{"ast":null,"code":"var _jsxFileName = \"/Users/lebinh/Task3/client/src/components/PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../style/PostForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostForm({\n  onSubmit,\n  editingPost,\n  onCancel,\n  visible\n}) {\n  _s();\n  const [form, setForm] = useState({\n    title: \"\",\n    body: \"\",\n    userId: \"\"\n  });\n  useEffect(() => {\n    if (editingPost) {\n      setForm(editingPost);\n    }\n  }, [editingPost]);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(form);\n    setForm({\n      title: \"\",\n      body: \"\",\n      userId: \"\"\n    });\n  };\n  if (!visible) return null; // form sẽ không render nếu visible = false\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: editingPost ? \"Edit Post\" : \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: form.title,\n        onChange: handleChange,\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"body\",\n        value: form.body,\n        onChange: handleChange,\n        placeholder: \"Body\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"userId\",\n        value: form.userId,\n        onChange: handleChange,\n        placeholder: \"User ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editingPost ? \"Update\" : \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), editingPost && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(PostForm, \"7Hiq4gbP3bRxAJm/KDorp/H/Vrg=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PostForm","onSubmit","editingPost","onCancel","visible","_s","form","setForm","title","body","userId","handleChange","e","target","name","value","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/Users/lebinh/Task3/client/src/components/PostForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../style/PostForm.css\";\n\nfunction PostForm({ onSubmit, editingPost, onCancel, visible }) {\n  const [form, setForm] = useState({ title: \"\", body: \"\", userId: \"\" });\n\n  useEffect(() => {\n    if (editingPost) {\n      setForm(editingPost);\n    }\n  }, [editingPost]);\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(form);\n    setForm({ title: \"\", body: \"\", userId: \"\" });\n  };\n\n  if (!visible) return null; // form sẽ không render nếu visible = false\n\n  return (\n    <div className=\"post-form-overlay\">\n      <form className=\"post-form\" onSubmit={handleSubmit}>\n        <h2>{editingPost ? \"Edit Post\" : \"Create Post\"}</h2>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={form.title}\n          onChange={handleChange}\n          placeholder=\"Title\"\n          required\n        />\n        <textarea\n          name=\"body\"\n          value={form.body}\n          onChange={handleChange}\n          placeholder=\"Body\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"userId\"\n          value={form.userId}\n          onChange={handleChange}\n          placeholder=\"User ID\"\n          required\n        />\n        <div className=\"buttons\">\n          <button type=\"submit\">{editingPost ? \"Update\" : \"Create\"}</button>\n          {editingPost && (\n            <button type=\"button\" onClick={onCancel}>\n              Cancel\n            </button>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default PostForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}