{"ast":null,"code":"var _jsxFileName = \"/Users/lebinh/Task3/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts, createPost, updatePost, deletePost } from \"./features/posts/postsSlice\";\nimport PostList from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    items: posts,\n    loading\n  } = useSelector(state => state.posts);\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n  const handleCreateOrUpdate = async post => {\n    if (updatePost) {\n      await updatePost(updatePost._id, post);\n    } else {\n      await createPost(post);\n    }\n    setEditingPost(null);\n    loadPosts();\n  };\n  const handleDelete = async id => {\n    await deletePost(id);\n    loadPosts();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      onSubmit: handleCreateOrUpdate,\n      editingPost: editingPost,\n      onCancel: () => setEditingPost(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      onEdit: setEditingPost,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mV/KSaQxxxZl5B/LjKN0bObdnnY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","getPosts","createPost","updatePost","deletePost","PostList","PostForm","jsxDEV","_jsxDEV","App","_s","dispatch","items","posts","loading","state","handleCreateOrUpdate","post","_id","setEditingPost","loadPosts","handleDelete","id","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","editingPost","onCancel","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/lebinh/Task3/client/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getPosts,\n  createPost,\n  updatePost,\n  deletePost,\n} from \"./features/posts/postsSlice\";\nimport PostList from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { items: posts, loading } = useSelector((state) => state.posts);\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  const handleCreateOrUpdate = async (post) => {\n    if (updatePost) {\n      await updatePost(updatePost._id, post);\n    } else {\n      await createPost(post);\n    }\n    setEditingPost(null);\n    loadPosts();\n  };\n\n  const handleDelete = async (id) => {\n    await deletePost(id);\n    loadPosts();\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>Posts Manager</h1>\n      <PostForm\n        onSubmit={handleCreateOrUpdate}\n        editingPost={editingPost}\n        onCancel={() => setEditingPost(null)}\n      />\n      <PostList posts={posts} onEdit={setEditingPost} onDelete={handleDelete} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,UAAU,QACL,6BAA6B;AACpC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEa,KAAK,EAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACF,KAAK,CAAC;EAErEf,SAAS,CAAC,MAAM;IACda,QAAQ,CAACV,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,CAACU,QAAQ,CAAC,CAAC;EAEd,MAAMK,oBAAoB,GAAG,MAAOC,IAAI,IAAK;IAC3C,IAAId,UAAU,EAAE;MACd,MAAMA,UAAU,CAACA,UAAU,CAACe,GAAG,EAAED,IAAI,CAAC;IACxC,CAAC,MAAM;MACL,MAAMf,UAAU,CAACe,IAAI,CAAC;IACxB;IACAE,cAAc,CAAC,IAAI,CAAC;IACpBC,SAAS,CAAC,CAAC;EACb,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAMlB,UAAU,CAACkB,EAAE,CAAC;IACpBF,SAAS,CAAC,CAAC;EACb,CAAC;EAED,oBACEZ,OAAA;IAAKe,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBrB,OAAA,CAACF,QAAQ;MACPwB,QAAQ,EAAEd,oBAAqB;MAC/Be,WAAW,EAAEA,WAAY;MACzBC,QAAQ,EAAEA,CAAA,KAAMb,cAAc,CAAC,IAAI;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFrB,OAAA,CAACH,QAAQ;MAACQ,KAAK,EAAEA,KAAM;MAACoB,MAAM,EAAEd,cAAe;MAACe,QAAQ,EAAEb;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV;AAACnB,EAAA,CAlCQD,GAAG;EAAA,QACOV,WAAW,EACMC,WAAW;AAAA;AAAAmC,EAAA,GAFtC1B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}