{"ast":null,"code":"var _jsxFileName = \"/Users/lebinh/Task3/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts, addPost, editPost, removePost } from \"./features/posts/postsSlice\";\nimport PostList from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [editingPost, setEditingPost] = useState(null);\n  const loadPosts = async () => {\n    const res = await getPosts();\n    setPosts(res.data);\n  };\n  useEffect(() => {\n    loadPosts();\n  }, []);\n  const handleCreateOrUpdate = async post => {\n    if (editingPost) {\n      await updatePost(editingPost._id, post);\n    } else {\n      await createPost(post);\n    }\n    setEditingPost(null);\n    loadPosts();\n  };\n  const handleDelete = async id => {\n    await deletePost(id);\n    loadPosts();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      onSubmit: handleCreateOrUpdate,\n      editingPost: editingPost,\n      onCancel: () => setEditingPost(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      onEdit: setEditingPost,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qp5yy/dLh6ZObOob12Vdsoj+1Q8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","fetchPosts","addPost","editPost","removePost","PostList","PostForm","jsxDEV","_jsxDEV","App","_s","posts","setPosts","useState","editingPost","setEditingPost","loadPosts","res","getPosts","data","handleCreateOrUpdate","post","updatePost","_id","createPost","handleDelete","id","deletePost","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onCancel","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/lebinh/Task3/client/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  addPost,\n  editPost,\n  removePost,\n} from \"./features/posts/postsSlice\";\n\nimport PostList from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [editingPost, setEditingPost] = useState(null);\n\n  const loadPosts = async () => {\n    const res = await getPosts();\n    setPosts(res.data);\n  };\n\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  const handleCreateOrUpdate = async (post) => {\n    if (editingPost) {\n      await updatePost(editingPost._id, post);\n    } else {\n      await createPost(post);\n    }\n    setEditingPost(null);\n    loadPosts();\n  };\n\n  const handleDelete = async (id) => {\n    await deletePost(id);\n    loadPosts();\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>Posts Manager</h1>\n      <PostForm\n        onSubmit={handleCreateOrUpdate}\n        editingPost={editingPost}\n        onCancel={() => setEditingPost(null)}\n      />\n      <PostList posts={posts} onEdit={setEditingPost} onDelete={handleDelete} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,UAAU,EACVC,OAAO,EACPC,QAAQ,EACRC,UAAU,QACL,6BAA6B;AAEpC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMG,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,GAAG,GAAG,MAAMC,QAAQ,CAAC,CAAC;IAC5BN,QAAQ,CAACK,GAAG,CAACE,IAAI,CAAC;EACpB,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACdkB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,oBAAoB,GAAG,MAAOC,IAAI,IAAK;IAC3C,IAAIP,WAAW,EAAE;MACf,MAAMQ,UAAU,CAACR,WAAW,CAACS,GAAG,EAAEF,IAAI,CAAC;IACzC,CAAC,MAAM;MACL,MAAMG,UAAU,CAACH,IAAI,CAAC;IACxB;IACAN,cAAc,CAAC,IAAI,CAAC;IACpBC,SAAS,CAAC,CAAC;EACb,CAAC;EAED,MAAMS,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAMC,UAAU,CAACD,EAAE,CAAC;IACpBV,SAAS,CAAC,CAAC;EACb,CAAC;EAED,oBACER,OAAA;IAAKoB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB1B,OAAA,CAACF,QAAQ;MACP6B,QAAQ,EAAEf,oBAAqB;MAC/BN,WAAW,EAAEA,WAAY;MACzBsB,QAAQ,EAAEA,CAAA,KAAMrB,cAAc,CAAC,IAAI;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACF1B,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEA,KAAM;MAAC0B,MAAM,EAAEtB,cAAe;MAACuB,QAAQ,EAAEb;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV;AAACxB,EAAA,CAvCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}